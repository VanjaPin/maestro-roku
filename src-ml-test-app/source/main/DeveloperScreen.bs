import "pkg:/source/view/debug/DeveloperScreen.bs"
import "pkg:/source/core/DebugTimer.bs"
namespace main
  @node("DeveloperScreen", "mv_DeveloperScreen")
  class DeveloperScreen extends mv.debug.DeveloperScreen

    private views = []

    protected override function initialize()
      super.initialize()

    end function

    protected override function getMenuPageBuilderFunctions() as mc.types.array
      return [
        m.getDefaultPage
        m.getPage2
        m.getPage3
        m.getPage4
        m.getPage5
      ]
    end function


    '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    '++ Pages
    '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    protected function getPage2()
      return [
        ["Buttons", function(): m.showScreen(m.createSGNode("ButtonScreen")): end function]
        ["Scroll screen", function(): m.showScreen(m.createSGNode("ScrollScreen")): end function]
        ["ControlGroup", function(): m.showScreen(m.createSGNode("ControlGroupScreen")): end function]
        ["TextInput", function(): m.showScreen(m.createSGNode("TextInputScreen")): end function]
        ["mv_Layout", function(): m.showScreen(m.createSGNode("MVLayoutScreen")): end function]
        ["Task Runner", function(): m.showScreen(m.createSGNode("TaskRunnerScreen")): end function]

        ["Timer", function(): m.showScreen(m.createSGNode("TimerScreen")): end function]
      ]
    end function

    protected function getPage3()
      return [
        ["GridRow bug", function(): m.showScreen(m.createSGNode("ModuleScreen")): end function]
        ["Notification Screen", function(): m.showScreen(m.createSGNode("NotificationScreen")): end function]
        ["NavController", function(): m.showScreen(m.createSGNode("NavControllerTestScreen")): end function]
        ["Tab Controller", function(): m.showScreen(m.createSGNode("TabControllerTestScreen")): end function]
        ["Dynamic Container", function(): m.showScreen(m.createSGNode("DynamicContainerTestScreen")): end function]
        ["Animations", function(): m.showScreen(m.createSGNode("AnimationScreen")): end function]
        ["Advanced Animations", function(): m.showScreen(m.createSGNode("AdvancedAnimationExampleScreen")): end function]
      ]
    end function

    protected function getPage4()
      return [
        ["Disney Inspired Hero ", function(): m.showScreen(m.createSGNode("DisneyHeroScreen")): end function]
        ["List OnEnterOnExit", function(): m.showScreen(m.createSGNode("ListEnterExitScreen")): end function]
        ["List ", function(): m.showScreen(m.createSGNode("ListScreen")): end function]
        ["List Editing (team screen)", function(): m.showScreen(m.createSGNode("TeamScreen")): end function]
        ["Grid Item JumpToItem", function(): m.showScreen(m.createSGNode("FocusOnGridItemScreen")): end function]
        ["Grid Item Moving", function(): m.showScreen(m.createSGNode("UpdateGridItemsScreen")): end function]
        ["RowList", function(): m.showScreen(m.createSGNode("RowListScreen")): end function]
        ["List Updates", function(): m.showScreen(m.createSGNode("UpdateListDataScreen")): end function]
      ]
    end function

    protected function getPage5()
      return [
        ["Focus tests", function(): m.showScreen(m.createSGNode("FocusTestScreen")): end function]
        ["Memory tests", function(): m.showScreen(m.createSGNode("MemoryTestsScreen")): end function]
      ]
    end function

  end class
end namespace
