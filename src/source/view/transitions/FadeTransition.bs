import "pkg:/source/view/NodeClass.bs"
import "pkg:/source/view/Animation.bs"
import "pkg:/source/core/Utils.bs"
import "pkg:/source/view/transitions/BaseTransition.bs"

namespace view.transitions
  ' /**
  '  * @module BaseTransition
  '  * @description BaseTransition component. extend this to create other transitions
  '  */
  @node("FadeTransition", "Group")
  class FadeTransition extends transitions.BaseTransition

    public color as string

    public size = [1920, 1080]

    public duration = 2

    private fadeRectangle
    private blackFadeAnim


    function new()
      super("FadeTransition")
    end function

    protected override function begin()
      if m.fadeRectangle = invalid
        m.fadeRectangle = createSGNode("Rectangle", m.owner, "fadeRectangle")
        m.blackFadeAnim = animations.utils.fadeTo(m.fadeRectangle, m.duration, 1, false)
        m.blackFadeAnim.setKeys([0, 0.5, 1.0], [0.0, 1.0, 0.0])
      end if

      m.blackFadeAnim.onFraction(0.5, function(f as float)
        if m.source <> invalid and not m.source.isSameNode(m.target)
          m.source.visible = false
          m.owner.removeChild(m.source)
        end if
        if m.owner.isShown
          m.target.visible = true
        end if
      end function, m)

      m.blackFadeAnim.onFraction(1, function(f as float)
        m.finish()
      end function, m)

      m.fadeRectangle.size = m.top.size
      m.fadeRectangle.color = m.top.color

      m.blackFadeAnim.start()
    end function

  end class
end namespace