import "pkg:/source/core/IOC.bs"
import "pkg:/source/core/Tasks.bs"
import "pkg:/source/core/Utils.bs"
import "pkg:/source/core/BaseClass.bs"

namespace view
  @strict
  class NodeClass extends BaseClass

    public __debugM = false

    function new(name as string)
      super(name)
    end function

    '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    '++ ioc wrappers
    '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

    function getInstance(name as string, path = invalid as string) as dynamic
      return ioc.getInstance(name, path)
    end function

    protected function setInstance(field as string, instance as dynamic)
      ioc.setInstance(field, instance)
    end function

    protected function getClassInstance(className as string, args = [] as types.array, createTypeIfNotPresent = true as boolean, storeInstance = true as boolean) as dynamic
      return ioc.getClassInstance(className, args, createTypeIfNotPresent, storeInstance)
    end function

    protected function createClassInstance(className as string, args = [] as types.array) as dynamic
      return ioc.createClassInstance(className, args)
    end function

    protected function setClassInstance(instance as dynamic)
      return ioc.setClassInstance(instance)
    end function


    '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    '++ scope support
    '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

    protected function getTopField(fieldName as string) as dynamic
      return getMField("top")[fieldName]
    end function

    protected function getMField(fieldName as string) as dynamic
      return getMField(fieldName)
    end function

  end class
end namespace